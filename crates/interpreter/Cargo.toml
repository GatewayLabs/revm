[package]
name = "revm-interpreter"
description = "Revm Interpreter that executes bytecode."
version = "10.0.1"
authors.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
unreachable_pub = "warn"
unused_must_use = "deny"
rust_2018_idioms = "deny"

[lints.rustdoc]
all = "warn"

[dependencies]
# revm
bytecode.workspace = true
primitives.workspace = true
specification.workspace = true
wiring.workspace = true
transaction.workspace = true
compute.workspace = true
encryption = { workspace = true }

# serialization
serde = { version = "1.0", features = ["derive", "rc"], optional = true }
serde_json = { version = "1.0", optional = true }
bincode = { version = "1.3", optional = true }
base64 = { version = "0.13", optional = true }
hex = { version = "0.4", optional = true }

# encryption
solana-zk-sdk = { version = "2.1.8", optional = true }

# mics
derive-where = { version = "1.2.7", default-features = false }

[dev-dependencies]
database-interface.workspace = true
walkdir = "2.5"
serde_json = "1.0"
bincode = "1.3.3"

[features]
default = ["std", "serde"]
std = ["serde?/std", "primitives/std", "wiring/std"]
hashbrown = ["primitives/hashbrown"]
serde = [
    "dep:serde", 
    "primitives/serde", 
    "bytecode/serde", 
    "wiring/serde",
    "dep:serde_json",
    "dep:bincode",
    "dep:base64",
    "dep:hex",
    "dep:solana-zk-sdk"
]
arbitrary = ["std", "primitives/arbitrary"]
memory_limit = ["wiring/memory_limit"]